{"ast":null,"code":"import { HEROES } from './mock-heroes';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class HeroService {\n  constructor() {} // getHeroes(): Hero[] { DON'T want to use this b/c its synchronous and won't work when fetching data; need asynchronous observable\n  //   return HEROES;\n  // }\n  // observable for asnychronous data fetching\n\n\n  getHeroes() {\n    const heroes = of(HEROES);\n    return heroes;\n  }\n\n}\n\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)();\n};\n\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/angular-tour-of-heroes/src/app/hero.service.ts"],"names":["HEROES","of","i0","HeroService","constructor","getHeroes","heroes","ɵfac","HeroService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,GAAG,CAAG,CADI,CAErB;AACA;AACA;AACA;;;AACAC,EAAAA,SAAS,GAAG;AACR,UAAMC,MAAM,GAAGL,EAAE,CAACD,MAAD,CAAjB;AACA,WAAOM,MAAP;AACH;;AAToB;;AAWzBH,WAAW,CAACI,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIN,WAAV,GAAP;AAAkC,CAAvF;;AACAA,WAAW,CAACO,KAAZ,GAAoB,aAAcR,EAAE,CAACS,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAET,WAAT;AAAsBU,EAAAA,OAAO,EAAEV,WAAW,CAACI,IAA3C;AAAiDO,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import { HEROES } from './mock-heroes';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class HeroService {\n    constructor() { }\n    // getHeroes(): Hero[] { DON'T want to use this b/c its synchronous and won't work when fetching data; need asynchronous observable\n    //   return HEROES;\n    // }\n    // observable for asnychronous data fetching\n    getHeroes() {\n        const heroes = of(HEROES);\n        return heroes;\n    }\n}\nHeroService.ɵfac = function HeroService_Factory(t) { return new (t || HeroService)(); };\nHeroService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: HeroService, factory: HeroService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}