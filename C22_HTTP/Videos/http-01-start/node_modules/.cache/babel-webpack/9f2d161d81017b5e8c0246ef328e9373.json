{"ast":null,"code":"import _classCallCheck from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nexport var Observable = /*#__PURE__*/function () {\n  function Observable(subscribe) {\n    _classCallCheck(this, Observable);\n\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  _createClass(Observable, [{\n    key: \"lift\",\n    value: function lift(operator) {\n      var observable = new Observable();\n      observable.source = this;\n      observable.operator = operator;\n      return observable;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(observerOrNext, error, complete) {\n      var _this = this;\n\n      var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n      errorContext(function () {\n        var operator = _this.operator,\n            source = _this.source;\n        subscriber.add(operator ? operator.call(subscriber, source) : source ? _this._subscribe(subscriber) : _this._trySubscribe(subscriber));\n      });\n      return subscriber;\n    }\n  }, {\n    key: \"_trySubscribe\",\n    value: function _trySubscribe(sink) {\n      try {\n        return this._subscribe(sink);\n      } catch (err) {\n        sink.error(err);\n      }\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(_next, promiseCtor) {\n      var _this2 = this;\n\n      promiseCtor = getPromiseCtor(promiseCtor);\n      return new promiseCtor(function (resolve, reject) {\n        var subscriber = new SafeSubscriber({\n          next: function next(value) {\n            try {\n              _next(value);\n            } catch (err) {\n              reject(err);\n              subscriber.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n\n        _this2.subscribe(subscriber);\n      });\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      var _a;\n\n      return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    }\n  }, {\n    key: Symbol_observable,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"pipe\",\n    value: function pipe() {\n      for (var _len = arguments.length, operations = new Array(_len), _key = 0; _key < _len; _key++) {\n        operations[_key] = arguments[_key];\n      }\n\n      return pipeFromArray(operations)(this);\n    }\n  }, {\n    key: \"toPromise\",\n    value: function toPromise(promiseCtor) {\n      var _this3 = this;\n\n      promiseCtor = getPromiseCtor(promiseCtor);\n      return new promiseCtor(function (resolve, reject) {\n        var value;\n\n        _this3.subscribe(function (x) {\n          return value = x;\n        }, function (err) {\n          return reject(err);\n        }, function () {\n          return resolve(value);\n        });\n      });\n    }\n  }]);\n\n  return Observable;\n}();\n\nObservable.create = function (subscribe) {\n  return new Observable(subscribe);\n};\n\nfunction getPromiseCtor(promiseCtor) {\n  var _a;\n\n  return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\n\nfunction isObserver(value) {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber(value) {\n  return value && value instanceof Subscriber || isObserver(value) && isSubscription(value);\n}","map":{"version":3,"sources":["../../../src/internal/Observable.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nexport class Observable {\n    constructor(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    lift(operator) {\n        const observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    subscribe(observerOrNext, error, complete) {\n        const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(() => {\n            const { operator, source } = this;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        this._subscribe(subscriber)\n                    :\n                        this._trySubscribe(subscriber));\n        });\n        return subscriber;\n    }\n    _trySubscribe(sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    }\n    forEach(next, promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            const subscriber = new SafeSubscriber({\n                next: (value) => {\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscriber.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n            this.subscribe(subscriber);\n        });\n    }\n    _subscribe(subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    }\n    [Symbol_observable]() {\n        return this;\n    }\n    pipe(...operations) {\n        return pipeFromArray(operations)(this);\n    }\n    toPromise(promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let value;\n            this.subscribe((x) => (value = x), (err) => reject(err), () => resolve(value));\n        });\n    }\n}\nObservable.create = (subscribe) => {\n    return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n//# sourceMappingURL=Observable.js.map"]},"metadata":{},"sourceType":"module"}