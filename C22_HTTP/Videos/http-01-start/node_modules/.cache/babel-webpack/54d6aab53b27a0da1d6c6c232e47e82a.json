{"ast":null,"code":"import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nexport function race() {\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources = argsOrArgArray(sources);\n  return sources.length === 1 ? innerFrom(sources[0]) : new Observable(raceInit(sources));\n}\nexport function raceInit(sources) {\n  return function (subscriber) {\n    var subscriptions = [];\n\n    var _loop = function _loop(i) {\n      subscriptions.push(innerFrom(sources[i]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n        if (subscriptions) {\n          for (var s = 0; s < subscriptions.length; s++) {\n            s !== i && subscriptions[s].unsubscribe();\n          }\n\n          subscriptions = null;\n        }\n\n        subscriber.next(value);\n      })));\n    };\n\n    for (var i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n      _loop(i);\n    }\n  };\n}","map":{"version":3,"sources":["../../../../src/internal/observable/race.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,SAAT,QAA0B,aAA1B;AAGA,SAAS,cAAT,QAA+B,wBAA/B;AACA,SAAS,wBAAT,QAAyC,iCAAzC;AA6CA,OAAM,SAAU,IAAV,GAA2E;AAAA,oCAAtD,OAAsD;AAAtD,IAAA,OAAsD;AAAA;;AAC/E,EAAA,OAAO,GAAG,cAAc,CAAC,OAAD,CAAxB;AAEA,SAAO,OAAO,CAAC,MAAR,KAAmB,CAAnB,GAAuB,SAAS,CAAC,OAAO,CAAC,CAAD,CAAR,CAAhC,GAAqE,IAAI,UAAJ,CAAkB,QAAQ,CAAC,OAAD,CAA1B,CAA5E;AACD;AAOD,OAAM,SAAU,QAAV,CAAsB,OAAtB,EAAmD;AACvD,SAAO,UAAC,UAAD,EAA8B;AACnC,QAAI,aAAa,GAAmB,EAApC;;AADmC,+BAO1B,CAP0B;AAQjC,MAAA,aAAa,CAAC,IAAd,CACE,SAAS,CAAC,OAAO,CAAC,CAAD,CAAR,CAAT,CAA4C,SAA5C,CACE,wBAAwB,CAAC,UAAD,EAAa,UAAC,KAAD,EAAU;AAC7C,YAAI,aAAJ,EAAmB;AAGjB,eAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,aAAa,CAAC,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,YAAA,CAAC,KAAK,CAAN,IAAW,aAAa,CAAC,CAAD,CAAb,CAAiB,WAAjB,EAAX;AACD;;AACD,UAAA,aAAa,GAAG,IAAhB;AACD;;AACD,QAAA,UAAU,CAAC,IAAX,CAAgB,KAAhB;AACD,OAVuB,CAD1B,CADF;AARiC;;AAOnC,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,aAAa,IAAI,CAAC,UAAU,CAAC,MAA7B,IAAuC,CAAC,GAAG,OAAO,CAAC,MAAnE,EAA2E,CAAC,EAA5E,EAAgF;AAAA,YAAvE,CAAuE;AAgB/E;AACF,GAxBD;AAyBD","sourceRoot":"","sourcesContent":["import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nexport function race(...sources) {\n    sources = argsOrArgArray(sources);\n    return sources.length === 1 ? innerFrom(sources[0]) : new Observable(raceInit(sources));\n}\nexport function raceInit(sources) {\n    return (subscriber) => {\n        let subscriptions = [];\n        for (let i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n            subscriptions.push(innerFrom(sources[i]).subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (subscriptions) {\n                    for (let s = 0; s < subscriptions.length; s++) {\n                        s !== i && subscriptions[s].unsubscribe();\n                    }\n                    subscriptions = null;\n                }\n                subscriber.next(value);\n            })));\n        }\n    };\n}\n//# sourceMappingURL=race.js.map"]},"metadata":{},"sourceType":"module"}