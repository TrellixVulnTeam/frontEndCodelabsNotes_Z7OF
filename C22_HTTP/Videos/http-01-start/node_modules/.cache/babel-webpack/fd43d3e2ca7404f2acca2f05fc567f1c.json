{"ast":null,"code":"import _toConsumableArray from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from '../observable/from';\nexport function merge() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var scheduler = popScheduler(args);\n  var concurrent = popNumber(args, Infinity);\n  args = argsOrArgArray(args);\n  return operate(function (source, subscriber) {\n    mergeAll(concurrent)(from([source].concat(_toConsumableArray(args)), scheduler)).subscribe(subscriber);\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/merge.ts"],"names":[],"mappings":";AACA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,cAAT,QAA+B,wBAA/B;AACA,SAAS,QAAT,QAAyB,YAAzB;AACA,SAAS,SAAT,EAAoB,YAApB,QAAwC,cAAxC;AACA,SAAS,IAAT,QAAqB,oBAArB;AAiBA,OAAM,SAAU,KAAV,GAAqC;AAAA,oCAAf,IAAe;AAAf,IAAA,IAAe;AAAA;;AACzC,MAAM,SAAS,GAAG,YAAY,CAAC,IAAD,CAA9B;AACA,MAAM,UAAU,GAAG,SAAS,CAAC,IAAD,EAAO,QAAP,CAA5B;AACA,EAAA,IAAI,GAAG,cAAc,CAAC,IAAD,CAArB;AAEA,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAuB;AACpC,IAAA,QAAQ,CAAC,UAAD,CAAR,CAAqB,IAAI,EAAE,MAAF,4BAAc,IAAd,IAA8C,SAA9C,CAAzB,EAAmF,SAAnF,CAA6F,UAA7F;AACD,GAFa,CAAd;AAGD","sourceRoot":"","sourcesContent":["import { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from '../observable/from';\nexport function merge(...args) {\n    const scheduler = popScheduler(args);\n    const concurrent = popNumber(args, Infinity);\n    args = argsOrArgArray(args);\n    return operate((source, subscriber) => {\n        mergeAll(concurrent)(from([source, ...args], scheduler)).subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=merge.js.map"]},"metadata":{},"sourceType":"module"}