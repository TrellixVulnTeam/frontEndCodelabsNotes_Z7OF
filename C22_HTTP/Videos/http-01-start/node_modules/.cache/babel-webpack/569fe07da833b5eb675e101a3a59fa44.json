{"ast":null,"code":"import { raceInit } from '../observable/race';\nimport { operate } from '../util/lift';\nimport { identity } from '../util/identity';\nexport function raceWith() {\n  for (var _len = arguments.length, otherSources = new Array(_len), _key = 0; _key < _len; _key++) {\n    otherSources[_key] = arguments[_key];\n  }\n\n  return !otherSources.length ? identity : operate(function (source, subscriber) {\n    raceInit([source].concat(otherSources))(subscriber);\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/raceWith.ts"],"names":[],"mappings":"AACA,SAAS,QAAT,QAAyB,oBAAzB;AACA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,QAAT,QAAyB,kBAAzB;AA4BA,OAAM,SAAU,QAAV,GACyC;AAAA,oCAA1C,YAA0C;AAA1C,IAAA,YAA0C;AAAA;;AAE7C,SAAO,CAAC,YAAY,CAAC,MAAd,GACH,QADG,GAEH,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAuB;AAC7B,IAAA,QAAQ,EAAiB,MAAjB,SAA4B,YAA5B,EAAR,CAAmD,UAAnD;AACD,GAFM,CAFX;AAKD","sourceRoot":"","sourcesContent":["import { raceInit } from '../observable/race';\nimport { operate } from '../util/lift';\nimport { identity } from '../util/identity';\nexport function raceWith(...otherSources) {\n    return !otherSources.length\n        ? identity\n        : operate((source, subscriber) => {\n            raceInit([source, ...otherSources])(subscriber);\n        });\n}\n//# sourceMappingURL=raceWith.js.map"]},"metadata":{},"sourceType":"module"}