{"ast":null,"code":"import _regeneratorRuntime from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/regenerator\";\nimport _createForOfIteratorHelper from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport { __asyncValues, __awaiter } from \"tslib\";\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function innerFrom(input) {\n  if (input instanceof Observable) {\n    return input;\n  }\n\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\nexport function fromInteropObservable(obj) {\n  return new Observable(function (subscriber) {\n    var obs = obj[Symbol_observable]();\n\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\nexport function fromArrayLike(array) {\n  return new Observable(function (subscriber) {\n    for (var i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n\n    subscriber.complete();\n  });\n}\nexport function fromPromise(promise) {\n  return new Observable(function (subscriber) {\n    promise.then(function (value) {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    }, function (err) {\n      return subscriber.error(err);\n    }).then(null, reportUnhandledError);\n  });\n}\nexport function fromIterable(iterable) {\n  return new Observable(function (subscriber) {\n    var _iterator = _createForOfIteratorHelper(iterable),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var value = _step.value;\n        subscriber.next(value);\n\n        if (subscriber.closed) {\n          return;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    subscriber.complete();\n  });\n}\nexport function fromAsyncIterable(asyncIterable) {\n  return new Observable(function (subscriber) {\n    process(asyncIterable, subscriber).catch(function (err) {\n      return subscriber.error(err);\n    });\n  });\n}\nexport function fromReadableStreamLike(readableStream) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nfunction process(asyncIterable, subscriber) {\n  var asyncIterable_1, asyncIterable_1_1;\n\n  var e_1, _a;\n\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var value;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            asyncIterable_1 = __asyncValues(asyncIterable);\n\n          case 2:\n            _context.next = 4;\n            return asyncIterable_1.next();\n\n          case 4:\n            asyncIterable_1_1 = _context.sent;\n\n            if (asyncIterable_1_1.done) {\n              _context.next = 12;\n              break;\n            }\n\n            value = asyncIterable_1_1.value;\n            subscriber.next(value);\n\n            if (!subscriber.closed) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 10:\n            _context.next = 2;\n            break;\n\n          case 12:\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            e_1 = {\n              error: _context.t0\n            };\n\n          case 17:\n            _context.prev = 17;\n            _context.prev = 18;\n\n            if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) {\n              _context.next = 22;\n              break;\n            }\n\n            _context.next = 22;\n            return _a.call(asyncIterable_1);\n\n          case 22:\n            _context.prev = 22;\n\n            if (!e_1) {\n              _context.next = 25;\n              break;\n            }\n\n            throw e_1.error;\n\n          case 25:\n            return _context.finish(22);\n\n          case 26:\n            return _context.finish(17);\n\n          case 27:\n            subscriber.complete();\n\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 14, 17, 27], [18,, 22, 26]]);\n  }));\n}","map":{"version":3,"sources":["../../../../src/internal/observable/innerFrom.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __asyncValues, __awaiter } from \"tslib\";\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function innerFrom(input) {\n    if (input instanceof Observable) {\n        return input;\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromInteropObservable(input);\n        }\n        if (isArrayLike(input)) {\n            return fromArrayLike(input);\n        }\n        if (isPromise(input)) {\n            return fromPromise(input);\n        }\n        if (isAsyncIterable(input)) {\n            return fromAsyncIterable(input);\n        }\n        if (isIterable(input)) {\n            return fromIterable(input);\n        }\n        if (isReadableStreamLike(input)) {\n            return fromReadableStreamLike(input);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\nexport function fromInteropObservable(obj) {\n    return new Observable((subscriber) => {\n        const obs = obj[Symbol_observable]();\n        if (isFunction(obs.subscribe)) {\n            return obs.subscribe(subscriber);\n        }\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    });\n}\nexport function fromArrayLike(array) {\n    return new Observable((subscriber) => {\n        for (let i = 0; i < array.length && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    });\n}\nexport function fromPromise(promise) {\n    return new Observable((subscriber) => {\n        promise\n            .then((value) => {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, (err) => subscriber.error(err))\n            .then(null, reportUnhandledError);\n    });\n}\nexport function fromIterable(iterable) {\n    return new Observable((subscriber) => {\n        for (const value of iterable) {\n            subscriber.next(value);\n            if (subscriber.closed) {\n                return;\n            }\n        }\n        subscriber.complete();\n    });\n}\nexport function fromAsyncIterable(asyncIterable) {\n    return new Observable((subscriber) => {\n        process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n    });\n}\nexport function fromReadableStreamLike(readableStream) {\n    return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\nfunction process(asyncIterable, subscriber) {\n    var asyncIterable_1, asyncIterable_1_1;\n    var e_1, _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            for (asyncIterable_1 = __asyncValues(asyncIterable); asyncIterable_1_1 = yield asyncIterable_1.next(), !asyncIterable_1_1.done;) {\n                const value = asyncIterable_1_1.value;\n                subscriber.next(value);\n                if (subscriber.closed) {\n                    return;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return)) yield _a.call(asyncIterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        subscriber.complete();\n    });\n}\n//# sourceMappingURL=innerFrom.js.map"]},"metadata":{},"sourceType":"module"}