{"ast":null,"code":"import _toConsumableArray from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nexport var Subscription = /*#__PURE__*/function () {\n  function Subscription(initialTeardown) {\n    _classCallCheck(this, Subscription);\n\n    this.initialTeardown = initialTeardown;\n    this.closed = false;\n    this._parentage = null;\n    this._finalizers = null;\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      var errors;\n\n      if (!this.closed) {\n        this.closed = true;\n        var _parentage = this._parentage;\n\n        if (_parentage) {\n          this._parentage = null;\n\n          if (Array.isArray(_parentage)) {\n            var _iterator = _createForOfIteratorHelper(_parentage),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var parent = _step.value;\n                parent.remove(this);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          } else {\n            _parentage.remove(this);\n          }\n        }\n\n        var initialFinalizer = this.initialTeardown;\n\n        if (isFunction(initialFinalizer)) {\n          try {\n            initialFinalizer();\n          } catch (e) {\n            errors = e instanceof UnsubscriptionError ? e.errors : [e];\n          }\n        }\n\n        var _finalizers = this._finalizers;\n\n        if (_finalizers) {\n          this._finalizers = null;\n\n          var _iterator2 = _createForOfIteratorHelper(_finalizers),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var finalizer = _step2.value;\n\n              try {\n                execFinalizer(finalizer);\n              } catch (err) {\n                errors = errors !== null && errors !== void 0 ? errors : [];\n\n                if (err instanceof UnsubscriptionError) {\n                  errors = [].concat(_toConsumableArray(errors), _toConsumableArray(err.errors));\n                } else {\n                  errors.push(err);\n                }\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n\n        if (errors) {\n          throw new UnsubscriptionError(errors);\n        }\n      }\n    }\n  }, {\n    key: \"add\",\n    value: function add(teardown) {\n      var _a;\n\n      if (teardown && teardown !== this) {\n        if (this.closed) {\n          execFinalizer(teardown);\n        } else {\n          if (teardown instanceof Subscription) {\n            if (teardown.closed || teardown._hasParent(this)) {\n              return;\n            }\n\n            teardown._addParent(this);\n          }\n\n          (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n        }\n      }\n    }\n  }, {\n    key: \"_hasParent\",\n    value: function _hasParent(parent) {\n      var _parentage = this._parentage;\n      return _parentage === parent || Array.isArray(_parentage) && _parentage.includes(parent);\n    }\n  }, {\n    key: \"_addParent\",\n    value: function _addParent(parent) {\n      var _parentage = this._parentage;\n      this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    }\n  }, {\n    key: \"_removeParent\",\n    value: function _removeParent(parent) {\n      var _parentage = this._parentage;\n\n      if (_parentage === parent) {\n        this._parentage = null;\n      } else if (Array.isArray(_parentage)) {\n        arrRemove(_parentage, parent);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(teardown) {\n      var _finalizers = this._finalizers;\n      _finalizers && arrRemove(_finalizers, teardown);\n\n      if (teardown instanceof Subscription) {\n        teardown._removeParent(this);\n      }\n    }\n  }]);\n\n  return Subscription;\n}();\n\nSubscription.EMPTY = function () {\n  var empty = new Subscription();\n  empty.closed = true;\n  return empty;\n}();\n\nexport var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n  return value instanceof Subscription || value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe);\n}\n\nfunction execFinalizer(finalizer) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}","map":{"version":3,"sources":["../../../src/internal/Subscription.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nexport class Subscription {\n    constructor(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._finalizers = null;\n    }\n    unsubscribe() {\n        let errors;\n        if (!this.closed) {\n            this.closed = true;\n            const { _parentage } = this;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    for (const parent of _parentage) {\n                        parent.remove(this);\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            const { initialTeardown: initialFinalizer } = this;\n            if (isFunction(initialFinalizer)) {\n                try {\n                    initialFinalizer();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            const { _finalizers } = this;\n            if (_finalizers) {\n                this._finalizers = null;\n                for (const finalizer of _finalizers) {\n                    try {\n                        execFinalizer(finalizer);\n                    }\n                    catch (err) {\n                        errors = errors !== null && errors !== void 0 ? errors : [];\n                        if (err instanceof UnsubscriptionError) {\n                            errors = [...errors, ...err.errors];\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    }\n    add(teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execFinalizer(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    }\n    _hasParent(parent) {\n        const { _parentage } = this;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    }\n    _addParent(parent) {\n        const { _parentage } = this;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    }\n    _removeParent(parent) {\n        const { _parentage } = this;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    }\n    remove(teardown) {\n        const { _finalizers } = this;\n        _finalizers && arrRemove(_finalizers, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    }\n}\nSubscription.EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n})();\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execFinalizer(finalizer) {\n    if (isFunction(finalizer)) {\n        finalizer();\n    }\n    else {\n        finalizer.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscription.js.map"]},"metadata":{},"sourceType":"module"}