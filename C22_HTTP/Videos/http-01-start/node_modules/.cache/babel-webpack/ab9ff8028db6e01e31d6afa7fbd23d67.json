{"ast":null,"code":"import { zip as zipStatic } from '../observable/zip';\nimport { operate } from '../util/lift';\nexport function zip() {\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  return operate(function (source, subscriber) {\n    zipStatic.apply(void 0, [source].concat(sources)).subscribe(subscriber);\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/zip.ts"],"names":[],"mappings":"AAAA,SAAS,GAAG,IAAI,SAAhB,QAAiC,mBAAjC;AAEA,SAAS,OAAT,QAAwB,cAAxB;AAmBA,OAAM,SAAU,GAAV,GAA4F;AAAA,oCAArE,OAAqE;AAArE,IAAA,OAAqE;AAAA;;AAChG,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAuB;AACpC,IAAA,SAAS,MAAT,UAAU,MAAV,SAA8C,OAA9C,GAAuF,SAAvF,CAAiG,UAAjG;AACD,GAFa,CAAd;AAGD","sourceRoot":"","sourcesContent":["import { zip as zipStatic } from '../observable/zip';\nimport { operate } from '../util/lift';\nexport function zip(...sources) {\n    return operate((source, subscriber) => {\n        zipStatic(source, ...sources).subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=zip.js.map"]},"metadata":{},"sourceType":"module"}