{"ast":null,"code":"import { reduce } from './reduce';\nexport function count(predicate) {\n  return reduce(function (total, value, i) {\n    return !predicate || predicate(value, i) ? total + 1 : total;\n  }, 0);\n}","map":{"version":3,"sources":["../../../../src/internal/operators/count.ts"],"names":[],"mappings":"AACA,SAAS,MAAT,QAAuB,UAAvB;AAyDA,OAAM,SAAU,KAAV,CAAmB,SAAnB,EAAmE;AACvE,SAAO,MAAM,CAAC,UAAC,KAAD,EAAQ,KAAR,EAAe,CAAf;AAAA,WAAsB,CAAC,SAAD,IAAc,SAAS,CAAC,KAAD,EAAQ,CAAR,CAAvB,GAAoC,KAAK,GAAG,CAA5C,GAAgD,KAAtE;AAAA,GAAD,EAA+E,CAA/E,CAAb;AACD","sourceRoot":"","sourcesContent":["import { reduce } from './reduce';\nexport function count(predicate) {\n    return reduce((total, value, i) => (!predicate || predicate(value, i) ? total + 1 : total), 0);\n}\n//# sourceMappingURL=count.js.map"]},"metadata":{},"sourceType":"module"}