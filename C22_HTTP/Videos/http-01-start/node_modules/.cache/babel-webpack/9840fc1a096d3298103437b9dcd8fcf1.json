{"ast":null,"code":"import { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function buffer(closingNotifier) {\n  return operate(function (source, subscriber) {\n    var currentBuffer = [];\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      return currentBuffer.push(value);\n    }, function () {\n      subscriber.next(currentBuffer);\n      subscriber.complete();\n    }));\n    closingNotifier.subscribe(createOperatorSubscriber(subscriber, function () {\n      var b = currentBuffer;\n      currentBuffer = [];\n      subscriber.next(b);\n    }, noop));\n    return function () {\n      currentBuffer = null;\n    };\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/buffer.ts"],"names":[],"mappings":"AAEA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,IAAT,QAAqB,cAArB;AACA,SAAS,wBAAT,QAAyC,sBAAzC;AAuCA,OAAM,SAAU,MAAV,CAAoB,eAApB,EAAoD;AACxD,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAuB;AAEpC,QAAI,aAAa,GAAQ,EAAzB;AAGA,IAAA,MAAM,CAAC,SAAP,CACE,wBAAwB,CACtB,UADsB,EAEtB,UAAC,KAAD;AAAA,aAAW,aAAa,CAAC,IAAd,CAAmB,KAAnB,CAAX;AAAA,KAFsB,EAGtB,YAAK;AACH,MAAA,UAAU,CAAC,IAAX,CAAgB,aAAhB;AACA,MAAA,UAAU,CAAC,QAAX;AACD,KANqB,CAD1B;AAYA,IAAA,eAAe,CAAC,SAAhB,CACE,wBAAwB,CACtB,UADsB,EAEtB,YAAK;AAEH,UAAM,CAAC,GAAG,aAAV;AACA,MAAA,aAAa,GAAG,EAAhB;AACA,MAAA,UAAU,CAAC,IAAX,CAAgB,CAAhB;AACD,KAPqB,EAQtB,IARsB,CAD1B;AAaA,WAAO,YAAK;AAEV,MAAA,aAAa,GAAG,IAAhB;AACD,KAHD;AAID,GAlCa,CAAd;AAmCD","sourceRoot":"","sourcesContent":["import { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function buffer(closingNotifier) {\n    return operate((source, subscriber) => {\n        let currentBuffer = [];\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => currentBuffer.push(value), () => {\n            subscriber.next(currentBuffer);\n            subscriber.complete();\n        }));\n        closingNotifier.subscribe(createOperatorSubscriber(subscriber, () => {\n            const b = currentBuffer;\n            currentBuffer = [];\n            subscriber.next(b);\n        }, noop));\n        return () => {\n            currentBuffer = null;\n        };\n    });\n}\n//# sourceMappingURL=buffer.js.map"]},"metadata":{},"sourceType":"module"}