{"ast":null,"code":"import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler) {\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return operate(function (source, subscriber) {\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      return executeSchedule(subscriber, scheduler, function () {\n        return subscriber.next(value);\n      }, delay);\n    }, function () {\n      return executeSchedule(subscriber, scheduler, function () {\n        return subscriber.complete();\n      }, delay);\n    }, function (err) {\n      return executeSchedule(subscriber, scheduler, function () {\n        return subscriber.error(err);\n      }, delay);\n    }));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/observeOn.ts"],"names":[],"mappings":"AAEA,SAAS,eAAT,QAAgC,yBAAhC;AACA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,wBAAT,QAAyC,sBAAzC;AAsDA,OAAM,SAAU,SAAV,CAAuB,SAAvB,EAA0D;AAAA,MAAT,KAAS,uEAAD,CAAC;AAC9D,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAuB;AACpC,IAAA,MAAM,CAAC,SAAP,CACE,wBAAwB,CACtB,UADsB,EAEtB,UAAC,KAAD;AAAA,aAAW,eAAe,CAAC,UAAD,EAAa,SAAb,EAAwB;AAAA,eAAM,UAAU,CAAC,IAAX,CAAgB,KAAhB,CAAN;AAAA,OAAxB,EAAsD,KAAtD,CAA1B;AAAA,KAFsB,EAGtB;AAAA,aAAM,eAAe,CAAC,UAAD,EAAa,SAAb,EAAwB;AAAA,eAAM,UAAU,CAAC,QAAX,EAAN;AAAA,OAAxB,EAAqD,KAArD,CAArB;AAAA,KAHsB,EAItB,UAAC,GAAD;AAAA,aAAS,eAAe,CAAC,UAAD,EAAa,SAAb,EAAwB;AAAA,eAAM,UAAU,CAAC,KAAX,CAAiB,GAAjB,CAAN;AAAA,OAAxB,EAAqD,KAArD,CAAxB;AAAA,KAJsB,CAD1B;AAQD,GATa,CAAd;AAUD","sourceRoot":"","sourcesContent":["import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay = 0) {\n    return operate((source, subscriber) => {\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay), () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay), (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)));\n    });\n}\n//# sourceMappingURL=observeOn.js.map"]},"metadata":{},"sourceType":"module"}