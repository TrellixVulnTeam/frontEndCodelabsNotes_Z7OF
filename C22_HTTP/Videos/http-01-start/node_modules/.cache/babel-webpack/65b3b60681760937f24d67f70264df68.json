{"ast":null,"code":"import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n  var bufferSize;\n  var refCount = false;\n\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    var _configOrBufferSize$b = configOrBufferSize.bufferSize;\n    bufferSize = _configOrBufferSize$b === void 0 ? Infinity : _configOrBufferSize$b;\n    var _configOrBufferSize$w = configOrBufferSize.windowTime;\n    windowTime = _configOrBufferSize$w === void 0 ? Infinity : _configOrBufferSize$w;\n    var _configOrBufferSize$r = configOrBufferSize.refCount;\n    refCount = _configOrBufferSize$r === void 0 ? false : _configOrBufferSize$r;\n    scheduler = configOrBufferSize.scheduler;\n  } else {\n    bufferSize = configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity;\n  }\n\n  return share({\n    connector: function connector() {\n      return new ReplaySubject(bufferSize, windowTime, scheduler);\n    },\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/shareReplay.ts"],"names":[],"mappings":"AAAA,SAAS,aAAT,QAA8B,kBAA9B;AAEA,SAAS,KAAT,QAAsB,SAAtB;AAuJA,OAAM,SAAU,WAAV,CACJ,kBADI,EAEJ,UAFI,EAGJ,SAHI,EAGqB;AAEzB,MAAI,UAAJ;AACA,MAAI,QAAQ,GAAG,KAAf;;AACA,MAAI,kBAAkB,IAAI,OAAO,kBAAP,KAA8B,QAAxD,EAAkE;AAAA,gCACiB,kBADjB,CAC7D,UAD6D;AAC7D,IAAA,UAD6D,sCAChD,QADgD;AAAA,gCACiB,kBADjB,CACtC,UADsC;AACtC,IAAA,UADsC,sCACzB,QADyB;AAAA,gCACiB,kBADjB,CACf,QADe;AACf,IAAA,QADe,sCACJ,KADI;AACG,IAAA,SADH,GACiB,kBADjB,CACG,SADH;AAEjE,GAFD,MAEO;AACL,IAAA,UAAU,GAAG,kBAAkB,KAAA,IAAlB,IAAA,kBAAkB,KAAA,KAAA,CAAlB,GAAA,kBAAA,GAAsB,QAAnC;AACD;;AACD,SAAO,KAAK,CAAI;AACd,IAAA,SAAS,EAAE;AAAA,aAAM,IAAI,aAAJ,CAAkB,UAAlB,EAA8B,UAA9B,EAA0C,SAA1C,CAAN;AAAA,KADG;AAEd,IAAA,YAAY,EAAE,IAFA;AAGd,IAAA,eAAe,EAAE,KAHH;AAId,IAAA,mBAAmB,EAAE;AAJP,GAAJ,CAAZ;AAMD","sourceRoot":"","sourcesContent":["import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let bufferSize;\n    let refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n    }\n    else {\n        bufferSize = configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity;\n    }\n    return share({\n        connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount,\n    });\n}\n//# sourceMappingURL=shareReplay.js.map"]},"metadata":{},"sourceType":"module"}