{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nexport function bufferCount(bufferSize) {\n  var startBufferEvery = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  startBufferEvery = startBufferEvery !== null && startBufferEvery !== void 0 ? startBufferEvery : bufferSize;\n  return operate(function (source, subscriber) {\n    var buffers = [];\n    var count = 0;\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      var toEmit = null;\n\n      if (count++ % startBufferEvery === 0) {\n        buffers.push([]);\n      }\n\n      var _iterator = _createForOfIteratorHelper(buffers),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _buffer = _step.value;\n\n          _buffer.push(value);\n\n          if (bufferSize <= _buffer.length) {\n            toEmit = toEmit !== null && toEmit !== void 0 ? toEmit : [];\n            toEmit.push(_buffer);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (toEmit) {\n        var _iterator2 = _createForOfIteratorHelper(toEmit),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var buffer = _step2.value;\n            arrRemove(buffers, buffer);\n            subscriber.next(buffer);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    }, function () {\n      var _iterator3 = _createForOfIteratorHelper(buffers),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var buffer = _step3.value;\n          subscriber.next(buffer);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      subscriber.complete();\n    }, undefined, function () {\n      buffers = null;\n    }));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/bufferCount.ts"],"names":[],"mappings":";AACA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,wBAAT,QAAyC,sBAAzC;AACA,SAAS,SAAT,QAA0B,mBAA1B;AAqDA,OAAM,SAAU,WAAV,CAAyB,UAAzB,EAAmF;AAAA,MAAtC,gBAAsC,uEAAJ,IAAI;AAGvF,EAAA,gBAAgB,GAAG,gBAAgB,KAAA,IAAhB,IAAA,gBAAgB,KAAA,KAAA,CAAhB,GAAA,gBAAA,GAAoB,UAAvC;AAEA,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAuB;AACpC,QAAI,OAAO,GAAU,EAArB;AACA,QAAI,KAAK,GAAG,CAAZ;AAEA,IAAA,MAAM,CAAC,SAAP,CACE,wBAAwB,CACtB,UADsB,EAEtB,UAAC,KAAD,EAAU;AACR,UAAI,MAAM,GAAiB,IAA3B;;AAKA,UAAI,KAAK,KAAK,gBAAV,KAAgC,CAApC,EAAuC;AACrC,QAAA,OAAO,CAAC,IAAR,CAAa,EAAb;AACD;;AARO,iDAWa,OAXb;AAAA;;AAAA;AAWR,4DAA8B;AAAA,cAAnB,OAAmB;;AAC5B,UAAA,OAAM,CAAC,IAAP,CAAY,KAAZ;;AAMA,cAAI,UAAU,IAAI,OAAM,CAAC,MAAzB,EAAiC;AAC/B,YAAA,MAAM,GAAG,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAA,MAAA,GAAU,EAAnB;AACA,YAAA,MAAM,CAAC,IAAP,CAAY,OAAZ;AACD;AACF;AAtBO;AAAA;AAAA;AAAA;AAAA;;AAwBR,UAAI,MAAJ,EAAY;AAAA,oDAIW,MAJX;AAAA;;AAAA;AAIV,iEAA6B;AAAA,gBAAlB,MAAkB;AAC3B,YAAA,SAAS,CAAC,OAAD,EAAU,MAAV,CAAT;AACA,YAAA,UAAU,CAAC,IAAX,CAAgB,MAAhB;AACD;AAPS;AAAA;AAAA;AAAA;AAAA;AAQX;AACF,KAnCqB,EAoCtB,YAAK;AAAA,kDAGkB,OAHlB;AAAA;;AAAA;AAGH,+DAA8B;AAAA,cAAnB,MAAmB;AAC5B,UAAA,UAAU,CAAC,IAAX,CAAgB,MAAhB;AACD;AALE;AAAA;AAAA;AAAA;AAAA;;AAMH,MAAA,UAAU,CAAC,QAAX;AACD,KA3CqB,EA6CtB,SA7CsB,EA8CtB,YAAK;AAEH,MAAA,OAAO,GAAG,IAAV;AACD,KAjDqB,CAD1B;AAqDD,GAzDa,CAAd;AA0DD","sourceRoot":"","sourcesContent":["import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nexport function bufferCount(bufferSize, startBufferEvery = null) {\n    startBufferEvery = startBufferEvery !== null && startBufferEvery !== void 0 ? startBufferEvery : bufferSize;\n    return operate((source, subscriber) => {\n        let buffers = [];\n        let count = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            let toEmit = null;\n            if (count++ % startBufferEvery === 0) {\n                buffers.push([]);\n            }\n            for (const buffer of buffers) {\n                buffer.push(value);\n                if (bufferSize <= buffer.length) {\n                    toEmit = toEmit !== null && toEmit !== void 0 ? toEmit : [];\n                    toEmit.push(buffer);\n                }\n            }\n            if (toEmit) {\n                for (const buffer of toEmit) {\n                    arrRemove(buffers, buffer);\n                    subscriber.next(buffer);\n                }\n            }\n        }, () => {\n            for (const buffer of buffers) {\n                subscriber.next(buffer);\n            }\n            subscriber.complete();\n        }, undefined, () => {\n            buffers = null;\n        }));\n    });\n}\n//# sourceMappingURL=bufferCount.js.map"]},"metadata":{},"sourceType":"module"}