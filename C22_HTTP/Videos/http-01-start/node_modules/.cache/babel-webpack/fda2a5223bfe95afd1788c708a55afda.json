{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport var Subject = /*#__PURE__*/function (_Observable) {\n  _inherits(Subject, _Observable);\n\n  var _super = _createSuper(Subject);\n\n  function Subject() {\n    var _this;\n\n    _classCallCheck(this, Subject);\n\n    _this = _super.call(this);\n    _this.closed = false;\n    _this.currentObservers = null;\n    _this.observers = [];\n    _this.isStopped = false;\n    _this.hasError = false;\n    _this.thrownError = null;\n    return _this;\n  }\n\n  _createClass(Subject, [{\n    key: \"lift\",\n    value: function lift(operator) {\n      var subject = new AnonymousSubject(this, this);\n      subject.operator = operator;\n      return subject;\n    }\n  }, {\n    key: \"_throwIfClosed\",\n    value: function _throwIfClosed() {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      var _this2 = this;\n\n      errorContext(function () {\n        _this2._throwIfClosed();\n\n        if (!_this2.isStopped) {\n          if (!_this2.currentObservers) {\n            _this2.currentObservers = Array.from(_this2.observers);\n          }\n\n          var _iterator = _createForOfIteratorHelper(_this2.currentObservers),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var observer = _step.value;\n              observer.next(value);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      var _this3 = this;\n\n      errorContext(function () {\n        _this3._throwIfClosed();\n\n        if (!_this3.isStopped) {\n          _this3.hasError = _this3.isStopped = true;\n          _this3.thrownError = err;\n          var observers = _this3.observers;\n\n          while (observers.length) {\n            observers.shift().error(err);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var _this4 = this;\n\n      errorContext(function () {\n        _this4._throwIfClosed();\n\n        if (!_this4.isStopped) {\n          _this4.isStopped = true;\n          var observers = _this4.observers;\n\n          while (observers.length) {\n            observers.shift().complete();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.isStopped = this.closed = true;\n      this.observers = this.currentObservers = null;\n    }\n  }, {\n    key: \"observed\",\n    get: function get() {\n      var _a;\n\n      return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n  }, {\n    key: \"_trySubscribe\",\n    value: function _trySubscribe(subscriber) {\n      this._throwIfClosed();\n\n      return _get(_getPrototypeOf(Subject.prototype), \"_trySubscribe\", this).call(this, subscriber);\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      this._throwIfClosed();\n\n      this._checkFinalizedStatuses(subscriber);\n\n      return this._innerSubscribe(subscriber);\n    }\n  }, {\n    key: \"_innerSubscribe\",\n    value: function _innerSubscribe(subscriber) {\n      var _this5 = this;\n\n      var hasError = this.hasError,\n          isStopped = this.isStopped,\n          observers = this.observers;\n\n      if (hasError || isStopped) {\n        return EMPTY_SUBSCRIPTION;\n      }\n\n      this.currentObservers = null;\n      observers.push(subscriber);\n      return new Subscription(function () {\n        _this5.currentObservers = null;\n        arrRemove(observers, subscriber);\n      });\n    }\n  }, {\n    key: \"_checkFinalizedStatuses\",\n    value: function _checkFinalizedStatuses(subscriber) {\n      var hasError = this.hasError,\n          thrownError = this.thrownError,\n          isStopped = this.isStopped;\n\n      if (hasError) {\n        subscriber.error(thrownError);\n      } else if (isStopped) {\n        subscriber.complete();\n      }\n    }\n  }, {\n    key: \"asObservable\",\n    value: function asObservable() {\n      var observable = new Observable();\n      observable.source = this;\n      return observable;\n    }\n  }]);\n\n  return Subject;\n}(Observable);\n\nSubject.create = function (destination, source) {\n  return new AnonymousSubject(destination, source);\n};\n\nexport var AnonymousSubject = /*#__PURE__*/function (_Subject) {\n  _inherits(AnonymousSubject, _Subject);\n\n  var _super2 = _createSuper(AnonymousSubject);\n\n  function AnonymousSubject(destination, source) {\n    var _this6;\n\n    _classCallCheck(this, AnonymousSubject);\n\n    _this6 = _super2.call(this);\n    _this6.destination = destination;\n    _this6.source = source;\n    return _this6;\n  }\n\n  _createClass(AnonymousSubject, [{\n    key: \"next\",\n    value: function next(value) {\n      var _a, _b;\n\n      (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      var _a, _b;\n\n      (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var _a, _b;\n\n      (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      var _a, _b;\n\n      return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n  }]);\n\n  return AnonymousSubject;\n}(Subject);","map":{"version":3,"sources":["../../../src/internal/Subject.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.currentObservers = null;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                if (!this.currentObservers) {\n                    this.currentObservers = Array.from(this.observers);\n                }\n                for (const observer of this.currentObservers) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(() => {\n            this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n//# sourceMappingURL=Subject.js.map"]},"metadata":{},"sourceType":"module"}