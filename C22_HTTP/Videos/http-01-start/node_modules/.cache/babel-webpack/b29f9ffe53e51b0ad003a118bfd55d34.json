{"ast":null,"code":"import { asyncScheduler } from '../scheduler/async';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\nexport function delay(due) {\n  var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : asyncScheduler;\n  var duration = timer(due, scheduler);\n  return delayWhen(function () {\n    return duration;\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/delay.ts"],"names":[],"mappings":"AAAA,SAAS,cAAT,QAA+B,oBAA/B;AAEA,SAAS,SAAT,QAA0B,aAA1B;AACA,SAAS,KAAT,QAAsB,qBAAtB;AA0DA,OAAM,SAAU,KAAV,CAAmB,GAAnB,EAAgF;AAAA,MAAzC,SAAyC,uEAAd,cAAc;AACpF,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAD,EAAM,SAAN,CAAtB;AACA,SAAO,SAAS,CAAC;AAAA,WAAM,QAAN;AAAA,GAAD,CAAhB;AACD","sourceRoot":"","sourcesContent":["import { asyncScheduler } from '../scheduler/async';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\nexport function delay(due, scheduler = asyncScheduler) {\n    const duration = timer(due, scheduler);\n    return delayWhen(() => duration);\n}\n//# sourceMappingURL=delay.js.map"]},"metadata":{},"sourceType":"module"}