{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function bufferToggle(openings, closingSelector) {\n  return operate(function (source, subscriber) {\n    var buffers = [];\n    innerFrom(openings).subscribe(createOperatorSubscriber(subscriber, function (openValue) {\n      var buffer = [];\n      buffers.push(buffer);\n      var closingSubscription = new Subscription();\n\n      var emitBuffer = function emitBuffer() {\n        arrRemove(buffers, buffer);\n        subscriber.next(buffer);\n        closingSubscription.unsubscribe();\n      };\n\n      closingSubscription.add(innerFrom(closingSelector(openValue)).subscribe(createOperatorSubscriber(subscriber, emitBuffer, noop)));\n    }, noop));\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      var _iterator = _createForOfIteratorHelper(buffers),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var buffer = _step.value;\n          buffer.push(value);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }, function () {\n      while (buffers.length > 0) {\n        subscriber.next(buffers.shift());\n      }\n\n      subscriber.complete();\n    }));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/bufferToggle.ts"],"names":[],"mappings":";AAAA,SAAS,YAAT,QAA6B,iBAA7B;AAEA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,SAAT,QAA0B,yBAA1B;AACA,SAAS,wBAAT,QAAyC,sBAAzC;AACA,SAAS,IAAT,QAAqB,cAArB;AACA,SAAS,SAAT,QAA0B,mBAA1B;AA6CA,OAAM,SAAU,YAAV,CACJ,QADI,EAEJ,eAFI,EAE+C;AAEnD,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAuB;AACpC,QAAM,OAAO,GAAU,EAAvB;AAGA,IAAA,SAAS,CAAC,QAAD,CAAT,CAAoB,SAApB,CACE,wBAAwB,CACtB,UADsB,EAEtB,UAAC,SAAD,EAAc;AACZ,UAAM,MAAM,GAAQ,EAApB;AACA,MAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AAGA,UAAM,mBAAmB,GAAG,IAAI,YAAJ,EAA5B;;AAEA,UAAM,UAAU,GAAG,SAAb,UAAa,GAAK;AACtB,QAAA,SAAS,CAAC,OAAD,EAAU,MAAV,CAAT;AACA,QAAA,UAAU,CAAC,IAAX,CAAgB,MAAhB;AACA,QAAA,mBAAmB,CAAC,WAApB;AACD,OAJD;;AAOA,MAAA,mBAAmB,CAAC,GAApB,CAAwB,SAAS,CAAC,eAAe,CAAC,SAAD,CAAhB,CAAT,CAAsC,SAAtC,CAAgD,wBAAwB,CAAC,UAAD,EAAa,UAAb,EAAyB,IAAzB,CAAxE,CAAxB;AACD,KAjBqB,EAkBtB,IAlBsB,CAD1B;AAuBA,IAAA,MAAM,CAAC,SAAP,CACE,wBAAwB,CACtB,UADsB,EAEtB,UAAC,KAAD,EAAU;AAAA,iDAEa,OAFb;AAAA;;AAAA;AAER,4DAA8B;AAAA,cAAnB,MAAmB;AAC5B,UAAA,MAAM,CAAC,IAAP,CAAY,KAAZ;AACD;AAJO;AAAA;AAAA;AAAA;AAAA;AAKT,KAPqB,EAQtB,YAAK;AAEH,aAAO,OAAO,CAAC,MAAR,GAAiB,CAAxB,EAA2B;AACzB,QAAA,UAAU,CAAC,IAAX,CAAgB,OAAO,CAAC,KAAR,EAAhB;AACD;;AACD,MAAA,UAAU,CAAC,QAAX;AACD,KAdqB,CAD1B;AAkBD,GA7Ca,CAAd;AA8CD","sourceRoot":"","sourcesContent":["import { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function bufferToggle(openings, closingSelector) {\n    return operate((source, subscriber) => {\n        const buffers = [];\n        innerFrom(openings).subscribe(createOperatorSubscriber(subscriber, (openValue) => {\n            const buffer = [];\n            buffers.push(buffer);\n            const closingSubscription = new Subscription();\n            const emitBuffer = () => {\n                arrRemove(buffers, buffer);\n                subscriber.next(buffer);\n                closingSubscription.unsubscribe();\n            };\n            closingSubscription.add(innerFrom(closingSelector(openValue)).subscribe(createOperatorSubscriber(subscriber, emitBuffer, noop)));\n        }, noop));\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            for (const buffer of buffers) {\n                buffer.push(value);\n            }\n        }, () => {\n            while (buffers.length > 0) {\n                subscriber.next(buffers.shift());\n            }\n            subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=bufferToggle.js.map"]},"metadata":{},"sourceType":"module"}