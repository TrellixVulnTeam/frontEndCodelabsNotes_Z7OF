{"ast":null,"code":"import _regeneratorRuntime from \"/Users/maryanderson/Documents/GitHub/Local-Codelabs-Repository/C22_HTTP/Videos/http-01-start/node_modules/@babel/runtime/regenerator\";\nimport { __asyncGenerator, __await } from \"tslib\";\nimport { isFunction } from './isFunction';\nexport function readableStreamLikeToAsyncGenerator(readableStream) {\n  return __asyncGenerator(this, arguments, /*#__PURE__*/_regeneratorRuntime.mark(function readableStreamLikeToAsyncGenerator_1() {\n    var reader, _yield$__await, value, done;\n\n    return _regeneratorRuntime.wrap(function readableStreamLikeToAsyncGenerator_1$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            reader = readableStream.getReader();\n            _context.prev = 1;\n\n          case 2:\n            if (!true) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 5;\n            return __await(reader.read());\n\n          case 5:\n            _yield$__await = _context.sent;\n            value = _yield$__await.value;\n            done = _yield$__await.done;\n\n            if (!done) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 11;\n            return __await(void 0);\n\n          case 11:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 12:\n            _context.next = 14;\n            return __await(value);\n\n          case 14:\n            _context.next = 16;\n            return _context.sent;\n\n          case 16:\n            _context.next = 2;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            reader.releaseLock();\n            return _context.finish(18);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, readableStreamLikeToAsyncGenerator_1, null, [[1,, 18, 21]]);\n  }));\n}\nexport function isReadableStreamLike(obj) {\n  return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);\n}","map":{"version":3,"sources":["../../../../src/internal/util/isReadableStreamLike.ts"],"names":[],"mappings":";;AACA,SAAS,UAAT,QAA2B,cAA3B;AAEA,OAAM,SAAiB,kCAAjB,CAAuD,cAAvD,EAA4F;;;;;;;;AAC1F,YAAA,M,GAAS,cAAc,CAAC,SAAf,E;;;;iBAEN,I;;;;;;AACmB,mBAAA,OAAA,CAAM,MAAM,CAAC,IAAP,EAAN,CAAA;;;;AAAhB,YAAA,K,kBAAA,K;AAAO,YAAA,I,kBAAA,I;;iBACX,I;;;;;;AACF,mBAAA,OAAA,CAAA,KAAA,CAAA,CAAA;;;;;;;AAEF,mBAAA,OAAA,CAAM,KAAN,CAAA;;;;AAAA;;;;;;;;AAGF,YAAA,MAAM,CAAC,WAAP;;;;;;;;;;AAEH;AAED,OAAM,SAAU,oBAAV,CAAkC,GAAlC,EAA0C;AAG9C,SAAO,UAAU,CAAC,GAAG,KAAA,IAAH,IAAA,GAAG,KAAA,KAAA,CAAH,GAAG,KAAA,CAAH,GAAA,GAAG,CAAE,SAAN,CAAjB;AACD","sourceRoot":"","sourcesContent":["import { __asyncGenerator, __await } from \"tslib\";\nimport { isFunction } from './isFunction';\nexport function readableStreamLikeToAsyncGenerator(readableStream) {\n    return __asyncGenerator(this, arguments, function* readableStreamLikeToAsyncGenerator_1() {\n        const reader = readableStream.getReader();\n        try {\n            while (true) {\n                const { value, done } = yield __await(reader.read());\n                if (done) {\n                    return yield __await(void 0);\n                }\n                yield yield __await(value);\n            }\n        }\n        finally {\n            reader.releaseLock();\n        }\n    });\n}\nexport function isReadableStreamLike(obj) {\n    return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);\n}\n//# sourceMappingURL=isReadableStreamLike.js.map"]},"metadata":{},"sourceType":"module"}